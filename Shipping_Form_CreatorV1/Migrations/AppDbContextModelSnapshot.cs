// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shipping_Form_CreatorV1.Data;

#nullable disable

namespace Shipping_Form_CreatorV1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Shipping_Form_CreatorV1.Models.LineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LineItemHeaderId")
                        .HasColumnType("int");

                    b.Property<int>("ReportModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LineItemHeaderId")
                        .IsUnique();

                    b.HasIndex("ReportModelId");

                    b.ToTable("LineItems");
                });

            modelBuilder.Entity("Shipping_Form_CreatorV1.Models.LineItemDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BolFlag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("ModelItem")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NoteSequenceNumber")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NoteText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackingListFlag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LineItemId");

                    b.ToTable("LineItemDetails");
                });

            modelBuilder.Entity("Shipping_Form_CreatorV1.Models.LineItemHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BackOrderQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LineItemNumber")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OrderedQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PickOrShipQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LineItemHeaders");
                });

            modelBuilder.Entity("Shipping_Form_CreatorV1.Models.LineItemPackingUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CartonOrSkid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CartonOrSkidContents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineItemId")
                        .HasColumnType("int");

                    b.Property<int>("LineNumber")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("TypeOfUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LineItemId");

                    b.ToTable("LineItemPackingUnits");
                });

            modelBuilder.Entity("Shipping_Form_CreatorV1.Models.ReportHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CarrierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPONumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DueDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreightTerms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrdEnterDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<int>("PageCount")
                        .HasColumnType("int");

                    b.Property<int>("ReportModelId")
                        .HasColumnType("int");

                    b.Property<string>("SalesPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipToCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipToCustAddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipToCustAddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipToCustAddressLine3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipToCustNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipToName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipToSt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipToZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoldToCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoldToCustAddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoldToCustAddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoldToCustAddressLine3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoldToCustNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoldToName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoldToSt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoldToZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Suffix")
                        .HasColumnType("int");

                    b.Property<string>("TrackingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReportModelId")
                        .IsUnique();

                    b.ToTable("ReportHeaders");
                });

            modelBuilder.Entity("Shipping_Form_CreatorV1.Models.ReportModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("ReportModels");
                });

            modelBuilder.Entity("Shipping_Form_CreatorV1.Models.LineItem", b =>
                {
                    b.HasOne("Shipping_Form_CreatorV1.Models.LineItemHeader", "LineItemHeader")
                        .WithOne("LineItem")
                        .HasForeignKey("Shipping_Form_CreatorV1.Models.LineItem", "LineItemHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shipping_Form_CreatorV1.Models.ReportModel", "ReportModel")
                        .WithMany("LineItems")
                        .HasForeignKey("ReportModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LineItemHeader");

                    b.Navigation("ReportModel");
                });

            modelBuilder.Entity("Shipping_Form_CreatorV1.Models.LineItemDetail", b =>
                {
                    b.HasOne("Shipping_Form_CreatorV1.Models.LineItem", "LineItem")
                        .WithMany("LineItemDetails")
                        .HasForeignKey("LineItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LineItem");
                });

            modelBuilder.Entity("Shipping_Form_CreatorV1.Models.LineItemPackingUnit", b =>
                {
                    b.HasOne("Shipping_Form_CreatorV1.Models.LineItem", "LineItem")
                        .WithMany("LineItemPackingUnits")
                        .HasForeignKey("LineItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LineItem");
                });

            modelBuilder.Entity("Shipping_Form_CreatorV1.Models.ReportHeader", b =>
                {
                    b.HasOne("Shipping_Form_CreatorV1.Models.ReportModel", "ReportModel")
                        .WithOne("Header")
                        .HasForeignKey("Shipping_Form_CreatorV1.Models.ReportHeader", "ReportModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportModel");
                });

            modelBuilder.Entity("Shipping_Form_CreatorV1.Models.LineItem", b =>
                {
                    b.Navigation("LineItemDetails");

                    b.Navigation("LineItemPackingUnits");
                });

            modelBuilder.Entity("Shipping_Form_CreatorV1.Models.LineItemHeader", b =>
                {
                    b.Navigation("LineItem")
                        .IsRequired();
                });

            modelBuilder.Entity("Shipping_Form_CreatorV1.Models.ReportModel", b =>
                {
                    b.Navigation("Header")
                        .IsRequired();

                    b.Navigation("LineItems");
                });
#pragma warning restore 612, 618
        }
    }
}
